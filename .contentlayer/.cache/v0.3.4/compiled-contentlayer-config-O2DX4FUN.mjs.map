{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport { remarkCodeTitles } from \"pliny/mdx-plugins/index.js\";\nimport getLanguageIconByExtension from \"@/utils/get-language-icon-by-extension\";\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      description: \"The desription of the post\",\n      required: true,\n    },\n    banner: {\n      type: \"string\",\n      description: \"The banner of the post\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/posts/${doc._raw.flattenedPath}`,\n    },\n  },\n}));\n\n/**\n * Adds a language icon to code blocks.\n * @returns A function that adds a language icon to code blocks.\n */\nconst rehypeAddLanguageIconToCodeBlocks = () => {\n  return () => {\n    visit(\"element\", (node:any) => {\n      if (node.properties?.[\"data-rehype-pretty-code-title\"] === undefined)\n        return;\n\n      node.children.unshift(\n        getLanguageIconByExtension(node.properties[\"data-language\"] as string)\n      );\n    });\n  };\n};\n\nconst rehypeoptions = {\n  // Use one of Shiki's packaged themes\n  theme: \"github-dark\",\n  // Set to true to keep the background color\n  keepBackground: true,\n  onVisitLine(node: any) {\n    if (node.children.length === 0) {\n      node.children = [{ type: \"text\", value: \" \" }];\n    }\n  },\n  onVisitHighlightedLine(node: any) {\n    node.properties.className.push(\"highlighted\");\n  },\n  onVisitHighlightedWord(node: any, id: any) {\n    node.properties.className = [\"word\"];\n  },\n};\n\nexport default makeSource({\n  contentDirPath: \"content/posts\",\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [remarkCodeTitles],\n    rehypePlugins: [\n      [rehypePrettyCode, rehypeoptions],\n      rehypeAddLanguageIconToCodeBlocks,\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,sBAAsB;AAC7B,SAAS,wBAAwB;AACjC,OAAO,gCAAgC;AAEvC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK,aAAa;AAAA,IACpD;AAAA,EACF;AACF,EAAE;AAMF,IAAM,oCAAoC,MAAM;AAC9C,SAAO,MAAM;AACX,UAAM,WAAW,CAAC,SAAa;AAC7B,UAAI,KAAK,aAAa,+BAA+B,MAAM;AACzD;AAEF,WAAK,SAAS;AAAA,QACZ,2BAA2B,KAAK,WAAW,eAAe,CAAW;AAAA,MACvE;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEA,IAAM,gBAAgB;AAAA;AAAA,EAEpB,OAAO;AAAA;AAAA,EAEP,gBAAgB;AAAA,EAChB,YAAY,MAAW;AACrB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA,EACA,uBAAuB,MAAW;AAChC,SAAK,WAAW,UAAU,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,uBAAuB,MAAW,IAAS;AACzC,SAAK,WAAW,YAAY,CAAC,MAAM;AAAA,EACrC;AACF;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe,CAAC,gBAAgB;AAAA,IAChC,eAAe;AAAA,MACb,CAAC,kBAAkB,aAAa;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
